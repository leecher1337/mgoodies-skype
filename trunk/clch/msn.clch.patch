Index: msn.cpp
===================================================================
--- msn.cpp	(revision 4305)
+++ msn.cpp	(working copy)
@@ -62,6 +62,7 @@
 int      msnOtherContactsBlocked = 0;
 HANDLE   hGroupAddEvent = NULL;
 HANDLE   hMSNNudge = NULL;
+HANDLE	 hMSNContactLeftChannel = NULL;
 bool		msnHaveChatDll = false;
 
 MYOPTIONS MyOptions;
@@ -316,6 +317,8 @@
 	char evtname[250];
 	sprintf(evtname,"%s/Nudge",protocolname);
 	hMSNNudge = CreateHookableEvent(evtname);
+	sprintf(evtname,"%s/ContactLeftChannel",protocolname);
+	hMSNContactLeftChannel = CreateHookableEvent(evtname);
 	
 	MSN_InitThreads();
 
@@ -374,6 +377,9 @@
 	if ( hMSNNudge )
 		DestroyHookableEvent( hMSNNudge );
 
+	if ( hMSNContactLeftChannel )
+		DestroyHookableEvent( hMSNContactLeftChannel );
+
 	UnloadMsnServices();
 
 	UninitSsl();
Index: msn_commands.cpp
===================================================================
--- msn_commands.cpp	(revision 4305)
+++ msn_commands.cpp	(working copy)
@@ -52,6 +52,7 @@
 char* profileURL = NULL;
 char* rru = NULL;
 extern HANDLE	 hMSNNudge;
+extern HANDLE	 hMSNContactLeftChannel;
 
 extern int msnPingTimeout;
 extern HANDLE hKeepAliveThreadEvt;
@@ -1228,6 +1229,9 @@
 			// in here, the first contact is the chat ID, starting from the second will be actual contact
 			// if only 1 person left in conversation
 			int personleft = MSN_ContactLeft( info, hContact );
+
+			NotifyEventHooks( hMSNContactLeftChannel, (WPARAM) hContact, (LPARAM) personleft );
+			
 			// see if the session is quit due to idleness
 			if ( personleft == 1 && !lstrcmpA( data.isIdle, "1" ) ) {
 				GCDEST gcd = { msnProtocolName, NULL, GC_EVENT_INFORMATION };
